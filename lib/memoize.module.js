import e from"@chriscdn/promise-semaphore";import r from"quick-lru";var n=function(e,n){var t,i,l;void 0===n&&(n={});var u=null!=(t=n.maxSize)?t:1e3,a=null!=(i=n.shouldCache)?i:function(){return!0},o=null!=(l=n.resolver)?l:function(){return JSON.stringify([].slice.call(arguments))},c=new r({maxAge:n.maxAge,maxSize:u}),s=function(){var r=[].slice.call(arguments),n=o.apply(void 0,r);if(c.has(n))return c.get(n);var t=e.apply(void 0,r);return a(t,n)&&c.set(n,t),t};return s.cache=c,s},t=function(n,t){var i,l,u;void 0===t&&(t={});var a=t.maxAge,o=null!=(i=t.maxSize)?i:1e3,c=null!=(l=t.shouldCache)?l:function(){return!0},s=null!=(u=t.resolver)?u:function(){return JSON.stringify([].slice.call(arguments))},v=new e,f=new r({maxAge:a,maxSize:o}),h=function(){try{var e=[].slice.call(arguments),r=s.apply(void 0,e);return Promise.resolve(f.has(r)?f.get(r):function(t,i){try{var l=Promise.resolve(v.acquire(r)).then(function(){return f.has(r)?f.get(r):Promise.resolve(n.apply(void 0,e)).then(function(e){return c(e,r)&&f.set(r,e),e})})}catch(e){return i(!0,e)}return l&&l.then?l.then(i.bind(null,!1),i.bind(null,!0)):i(!1,l)}(0,function(e,n){if(v.release(r),e)throw n;return n}))}catch(e){return Promise.reject(e)}};return h.cache=f,h};export{n as Memoize,t as MemoizeAsync};
//# sourceMappingURL=memoize.module.js.map
