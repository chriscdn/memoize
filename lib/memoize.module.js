import{LRUCache as r}from"lru-cache";import e from"@chriscdn/promise-semaphore";var n=function(e,n){var t,l;void 0===n&&(n={});var i=null!=(t=n.max)?t:1e3,o=null!=(l=n.resolver)?l:function(){return JSON.stringify([].slice.call(arguments))},u=new r({ttl:n.ttl,max:i});return function(){var r=[].slice.call(arguments),n=o.apply(void 0,r);if(u.has(n))return u.get(n);var t=e.apply(void 0,r);return u.set(n,t),t}},t=function(n,t){var l,i;void 0===t&&(t={});var o=t.ttl,u=null!=(l=t.max)?l:1e3,a=null!=(i=t.resolver)?i:function(){return JSON.stringify([].slice.call(arguments))},c=new e,s=new r({ttl:o,max:u});return function(){try{var r=[].slice.call(arguments),e=a.apply(void 0,r);return Promise.resolve(s.has(e)?s.get(e):function(t,l){try{var i=Promise.resolve(c.acquire(e)).then(function(){return s.has(e)?s.get(e):Promise.resolve(n.apply(void 0,r)).then(function(r){return s.set(e,r),r})})}catch(r){return l(!0,r)}return i&&i.then?i.then(l.bind(null,!1),l.bind(null,!0)):l(!1,i)}(0,function(r,n){if(c.release(e),r)throw n;return n}))}catch(r){return Promise.reject(r)}}};export{n as Memoize,t as MemoizeAsync};
//# sourceMappingURL=memoize.module.js.map
