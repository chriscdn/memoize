import{LRUCache as t}from"lru-cache";import r from"@chriscdn/promise-semaphore";const e=(r,e={})=>{var n;const a=null!=(n=e.max)?n:1e3,s=new t({ttl:e.ttl,max:a});return(...t)=>{const e=((...t)=>JSON.stringify(t))(...t);if(s.has(e))return s.get(e);{const n=r(...t);return s.set(e,n),n}}},n=(e,n={})=>{var a;const s=n.ttl,i=null!=(a=n.max)?a:1e3,o=new r,c=new t({ttl:s,max:i});return async(...t)=>{const r=((...t)=>JSON.stringify(t))(...t);if(c.has(r))return c.get(r);try{if(await o.acquire(r),c.has(r))return c.get(r);{const n=await e(...t);return c.set(r,n),n}}finally{o.release(r)}}};export{e as Memoize,n as MemoizeAsync};
//# sourceMappingURL=memoize.modern.js.map
