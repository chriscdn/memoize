import{Semaphore as e}from"@chriscdn/promise-semaphore";import r from"quick-lru";const n=(e,n={})=>{var a,t,s;const l=null!=(a=n.maxSize)?a:1e3,i=null!=(t=n.shouldCache)?t:()=>!0,c=null!=(s=n.resolver)?s:(...e)=>JSON.stringify(e),o=new r({maxAge:n.maxAge,maxSize:l}),u=(...r)=>{const n=c(...r);if(o.has(n))return o.get(n);{const a=e(...r);return i(a,n)&&o.set(n,a),a}};return u.cache=o,u},a=(n,a={})=>{var t,s,l;const i=null!=(t=a.maxSize)?t:1e3,c=null!=(s=a.shouldCache)?s:()=>!0,o=null!=(l=a.resolver)?l:(...e)=>JSON.stringify(e),u=new r({maxAge:a.maxAge,maxSize:i}),m=new e,h=async(...e)=>{const r=o(...e);try{if(await m.acquire(r),u.has(r))return u.get(r);{const a=await n(...e);return c(a,r)&&u.set(r,a),a}}finally{m.release(r)}};return h.cache=u,h};export{n as Memoize,a as MemoizeAsync};
//# sourceMappingURL=memoize.modern.js.map
