import e from"@chriscdn/promise-semaphore";import r from"quick-lru";const n=(e,n={})=>{var t,a,s;const i=null!=(t=n.maxSize)?t:1e3,l=null!=(a=n.shouldCache)?a:()=>!0,c=null!=(s=n.resolver)?s:(...e)=>JSON.stringify(e),o=new r({maxAge:n.maxAge,maxSize:i}),u=(...r)=>{const n=c(...r);if(o.has(n))return o.get(n);{const t=e(...r);return l(t,n)&&o.set(n,t),t}};return u.cache=o,u},t=(n,t={})=>{var a,s,i;const l=t.maxAge,c=null!=(a=t.maxSize)?a:1e3,o=null!=(s=t.shouldCache)?s:()=>!0,u=null!=(i=t.resolver)?i:(...e)=>JSON.stringify(e),m=new e,h=new r({maxAge:l,maxSize:c}),g=async(...e)=>{const r=u(...e);if(h.has(r))return h.get(r);try{if(await m.acquire(r),h.has(r))return h.get(r);{const t=await n(...e);return o(t,r)&&h.set(r,t),t}}finally{m.release(r)}};return g.cache=h,g};export{n as Memoize,t as MemoizeAsync};
//# sourceMappingURL=memoize.modern.js.map
